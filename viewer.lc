makeFrame (time :: Float)
          (color :: Vec 4 Float)
          (angle :: Float)
          (prims :: PrimitiveStream Triangle ((Vec 4 Float)))

    = imageFrame (emptyDepthImage 1, emptyColorImage (V4 0.2 0 0.5 1))
  `overlay`
      prims
    & mapPrimitives (\((p)) -> (projmat *. p, color))
    -- & mapPrimitives (\(p, c) -> (rotMatrixX(-pi/8) *. rotMatrixY (time) *. p, c))
    & rasterizePrimitives (TriangleCtx CullNone PolygonFill NoOffset LastVertex) ((Smooth))
    & accumulateWith (DepthOp Less True, ColorOp NoBlending (V4 True True True True))
  where
      projmat = perspective 0.1 100.0 (40 * pi / 180) 1.0
          .*. lookat (V3 (0.0) 1 (-2.0)) (V3 0.0 0.0 0.0) (V3 0.0 1.0 0.0)
          .*. rotMatrixY (angle)


main = renderFrame $
   makeFrame (Uniform "time")
             (Uniform "color")
             (Uniform "angle")
             (fetch "objects" ((Attribute "position")))
